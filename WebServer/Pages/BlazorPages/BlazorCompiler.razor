@page "/compiler"
<div>
    <span style="font-size: xx-large;">Compiler</span><br/>
    <textarea style="font-size: x-large; height:400px" width="100%"  @bind="@Text"> >Your code here</textarea><br/>
    <br/>
    <div>
        @if(Success)
        {
            @if(!diagnostics.Any())
            {
                <h6 style="font-size: x-large; color: #0c479f" >@result.Value</h6>
            }
            else
            {
                @foreach(var diagnostic in diagnostics)
                {
                    @if(diagnostic!=null)
                    {
                        <h2 style="color: brown;">@diagnostic</h2><br/>
                        @if(diagnostic.Span.Start == Text.Length)
                        {
                            continue;
                        }
                        else
                        {
                            DiagnosticProccess(diagnostic);
                             <span style="font-size: 28px;">@prefix <span style="color: brown;">@error</span> @subfix</span>
                        }
                    }
                }
            }
        }
    </div>
    <input type="button" style="font-size: x-large" value="Compiler" class="btn btn-success" @onclick="OnClickBtnMethod" />
</div>
@code
{
    [Parameter]
    public bool Success{get;set;}
    [Parameter]
    public string Text {get;set;}
    public Dictionary<VariableSymbol,object> variables = new Dictionary<VariableSymbol,object>();
    public SyntaxTree syntaxTree {get;set;}
    public Compilation compilation {get;set;}
    [Parameter]
    public EvaluationResult result{get;set;}
    [Parameter]
    public IEnumerable<Diagnostic> diagnostics{get;set;}
    [Parameter]
    public string prefix{get;set;}
    [Parameter]
    public string error{get;set;}
    [Parameter]
    public string subfix{get;set;}
    public void OnClickBtnMethod()
    {
        syntaxTree =  SyntaxTree.Parse(Text);
        compilation = new Compilation(syntaxTree);
        result = compilation.Evaluate(variables);
        diagnostics = result.Diagnostics;
        if(!Success)
            Success = true;
        else
            Success = false;
    }
    protected override void OnInitialized()
    {
        base.OnInitialized();
        Success = false;
    }
    public void DiagnosticProccess(Diagnostic diagnostic)
    {
        prefix = Text.Substring(0,diagnostic.Span.Start);
        if(diagnostic.Span.Start !=null)
        {
            error = Text.Substring(diagnostic.Span.Start, diagnostic.Span.Length);
            subfix = Text.Substring(diagnostic.Span.End);
        }
    }
}